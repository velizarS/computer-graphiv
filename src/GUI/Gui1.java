/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Velizar
 */
public class Gui1 extends javax.swing.JFrame {

    /**
     * Creates new form Gui1
     */
    public Gui1() {
        initComponents();
        GLOBALVARS.jPanelObjectColor = jPanelObjectColor;
        GLOBALVARS.jSliderRotation = jSliderRotation;
        GLOBALVARS.jListFigures = jList1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jToggleButtonRectan = new javax.swing.JToggleButton();
        jToggleButtonEllips = new javax.swing.JToggleButton();
        jToggleButtonStar = new javax.swing.JToggleButton();
        jToggleButtonSelect = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelColor = new javax.swing.JPanel();
        jLabelObjectColor = new javax.swing.JLabel();
        jPanelObjectColor = new javax.swing.JPanel();
        jToggleButtonMove = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jSliderRotation = new javax.swing.JSlider();
        jToggleButtonUp = new javax.swing.JToggleButton();
        jToggleButtonDown = new javax.swing.JToggleButton();
        jToggleButtonDelete = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanelCanvas = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        buttonGroup1.add(jToggleButtonRectan);
        jToggleButtonRectan.setSelected(true);
        jToggleButtonRectan.setText("rectan");

        buttonGroup1.add(jToggleButtonEllips);
        jToggleButtonEllips.setText("Ellips");

        buttonGroup1.add(jToggleButtonStar);
        jToggleButtonStar.setText("Star");

        buttonGroup1.add(jToggleButtonSelect);
        jToggleButtonSelect.setText("Select");
        jToggleButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonSelectActionPerformed(evt);
            }
        });

        jLabel1.setText("color");

        jPanelColor.setBackground(new java.awt.Color(204, 255, 0));
        jPanelColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelColorLayout = new javax.swing.GroupLayout(jPanelColor);
        jPanelColor.setLayout(jPanelColorLayout);
        jPanelColorLayout.setHorizontalGroup(
            jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanelColorLayout.setVerticalGroup(
            jPanelColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jLabelObjectColor.setText("object color");

        jPanelObjectColor.setBackground(new java.awt.Color(102, 102, 255));
        jPanelObjectColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelObjectColorMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelObjectColorLayout = new javax.swing.GroupLayout(jPanelObjectColor);
        jPanelObjectColor.setLayout(jPanelObjectColorLayout);
        jPanelObjectColorLayout.setHorizontalGroup(
            jPanelObjectColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        jPanelObjectColorLayout.setVerticalGroup(
            jPanelObjectColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        buttonGroup1.add(jToggleButtonMove);
        jToggleButtonMove.setText("Move");

        jLabel2.setText("Rotation");

        jSliderRotation.setMaximum(90);
        jSliderRotation.setMinimum(-90);
        jSliderRotation.setValue(0);
        jSliderRotation.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderRotationStateChanged(evt);
            }
        });
        jSliderRotation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jSliderRotationMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSliderRotationMouseReleased(evt);
            }
        });

        buttonGroup1.add(jToggleButtonUp);
        jToggleButtonUp.setText("Up");
        jToggleButtonUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jToggleButtonUpMouseReleased(evt);
            }
        });
        jToggleButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonUpActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButtonDown);
        jToggleButtonDown.setText("Down");
        jToggleButtonDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jToggleButtonDownMouseReleased(evt);
            }
        });
        jToggleButtonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDownActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButtonDelete);
        jToggleButtonDelete.setText("Delete");
        jToggleButtonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jToggleButtonDeleteMouseReleased(evt);
            }
        });
        jToggleButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDeleteActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToggleButtonStar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonEllips, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonRectan))
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jToggleButtonSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jToggleButtonMove)
                                .addGap(18, 18, 18)
                                .addComponent(jToggleButtonDelete))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabelObjectColor))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanelObjectColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderRotation, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToggleButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButtonDown))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jToggleButtonDown, jToggleButtonUp});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jToggleButtonRectan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButtonEllips)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButtonStar)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonSelect)
                    .addComponent(jToggleButtonMove)
                    .addComponent(jToggleButtonDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButtonDown, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addGap(9, 9, 9)
                .addComponent(jSliderRotation, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelObjectColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelObjectColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCanvas.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCanvas.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelCanvas.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelCanvasMouseDragged(evt);
            }
        });
        jPanelCanvas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelCanvasFocusGained(evt);
            }
        });
        jPanelCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelCanvasMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanelCanvasMouseReleased(evt);
            }
        });
        jPanelCanvas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanelCanvasComponentResized(evt);
            }
        });
        jPanelCanvas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanelCanvasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPanelCanvasKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelCanvasLayout = new javax.swing.GroupLayout(jPanelCanvas);
        jPanelCanvas.setLayout(jPanelCanvasLayout);
        jPanelCanvasLayout.setHorizontalGroup(
            jPanelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );
        jPanelCanvasLayout.setVerticalGroup(
            jPanelCanvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        jMenuItem1.setText("exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSave);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCanvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0); // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jPanelCanvasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCanvasMousePressed
        GLOBALVARS.startPoint = evt.getPoint();
        GLOBALVARS.moveLastPoint = evt.getPoint();    }//GEN-LAST:event_jPanelCanvasMousePressed

    private void jPanelCanvasMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCanvasMouseDragged
        GLOBALVARS.drawFigures();

        int x, y;
        int width = Math.abs(evt.getX() - GLOBALVARS.startPoint.x);
        int height = Math.abs(evt.getY() - GLOBALVARS.startPoint.y);

        if (GLOBALVARS.startPoint.x < evt.getX()) {
            x = GLOBALVARS.startPoint.x;
        } else {
            x = evt.getX();
        }

        if (GLOBALVARS.startPoint.y < evt.getY()) {
            y = GLOBALVARS.startPoint.y;
        } else {
            y = evt.getY();
        }

        GLOBALVARS.lastX = x;
        GLOBALVARS.lastY = y;
        GLOBALVARS.lastWidth = width;
        GLOBALVARS.lastHeight = height;

        if (jToggleButtonSelect.isSelected()) {
            GLOBALVARS.graphics2D.setColor(Color.BLACK);
            GLOBALVARS.graphics2D.setStroke(new BasicStroke(
                    1,
                    BasicStroke.CAP_BUTT,
                    BasicStroke.JOIN_BEVEL,
                    0,
                    new float[]{6, 3},
                    0));

            GLOBALVARS.graphics2D.drawRect(x, y, width, height);
        } else if (jToggleButtonRectan.isSelected()) {
            (new MyRectangle(
                    x, y,
                    width, height,
                    jPanelColor.getBackground())).draw(GLOBALVARS.graphics2D);
        } else if (jToggleButtonEllips.isSelected()) {
            (new Elipse(
                    x, y,
                    width, height,
                    jPanelColor.getBackground())).draw(GLOBALVARS.graphics2D);
        } else if (jToggleButtonStar.isSelected()) {
            (new Star(
                    x, y,
                    width, height,
                    jPanelColor.getBackground())).draw(GLOBALVARS.graphics2D);
        } else if (jToggleButtonMove.isSelected()) {
            for (int i = 0; i < GLOBALVARS.figures.size(); i++) {
                PRIMITIVE primitive = GLOBALVARS.figures.get(i);
                if (primitive.isSelected()) {
                    ((Rectangle) primitive).translate(
                            evt.getX() - GLOBALVARS.moveLastPoint.x,
                            evt.getY() - GLOBALVARS.moveLastPoint.y
                    );
                }
            }
            GLOBALVARS.moveLastPoint = evt.getPoint();
        }                                                     // TODO add your handling code here:
    }//GEN-LAST:event_jPanelCanvasMouseDragged

    private void jPanelCanvasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCanvasMouseReleased
        GLOBALVARS.clearLastRect();
        GLOBALVARS.graphics2D.setStroke(new BasicStroke());

        int x, y;
        int width = Math.abs(evt.getX() - GLOBALVARS.startPoint.x);
        int height = Math.abs(evt.getY() - GLOBALVARS.startPoint.y);

        if (GLOBALVARS.startPoint.x < evt.getX()) {
            x = GLOBALVARS.startPoint.x;
        } else {
            x = evt.getX();
        }

        if (GLOBALVARS.startPoint.y < evt.getY()) {
            y = GLOBALVARS.startPoint.y;
        } else {
            y = evt.getY();
        }

        if (jToggleButtonSelect.isSelected()) {
            GLOBALVARS.select(new Rectangle(x, y, width, height));
        } else if (jToggleButtonRectan.isSelected()) {
            GLOBALVARS.deselectAll();
            PRIMITIVE primitive = new MyRectangle(
                    x, y,
                    width, height,
                    jPanelColor.getBackground());
            primitive.setSelected(true);
            jPanelObjectColor.setBackground(jPanelColor.getBackground());
            jSliderRotation.setValue(0);
            GLOBALVARS.sliderLastPosition = 0;
            GLOBALVARS.figures.add(primitive);
        } else if (jToggleButtonEllips.isSelected()) {
            GLOBALVARS.deselectAll();
            PRIMITIVE primitive = new Elipse(
                    x, y,
                    width, height,
                    jPanelColor.getBackground());
            primitive.setSelected(true);
            jPanelObjectColor.setBackground(jPanelColor.getBackground());
            jSliderRotation.setValue(0);
            GLOBALVARS.sliderLastPosition = 0;
            GLOBALVARS.figures.add(primitive);
        } else if (jToggleButtonStar.isSelected()) {
            GLOBALVARS.deselectAll();
            PRIMITIVE primitive = new Star(
                    x, y,
                    width, height,
                    jPanelColor.getBackground());
            primitive.setSelected(true);
            jPanelObjectColor.setBackground(jPanelColor.getBackground());
            jSliderRotation.setValue(0);
            GLOBALVARS.sliderLastPosition = 0;
            GLOBALVARS.figures.add(primitive);
        }
        jPanelCanvas.repaint();
        GLOBALVARS.drawTimer = new Timer();
        GLOBALVARS.drawTimer.schedule(new drawTask(), GLOBALVARS.drawInterval);
                                      }//GEN-LAST:event_jPanelCanvasMouseReleased

    private void jPanelCanvasComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanelCanvasComponentResized
        GLOBALVARS.graphics2D = (Graphics2D) jPanelCanvas.getGraphics();
        GLOBALVARS.canvasSize.x = jPanelCanvas.getWidth();
        GLOBALVARS.canvasSize.y = jPanelCanvas.getHeight();
        GLOBALVARS.drawFigures();
        GLOBALVARS.drawTimer = new Timer();
        GLOBALVARS.drawTimer.schedule(new drawTask(), GLOBALVARS.drawInterval);
    }

    private void formFocusGained(java.awt.event.FocusEvent evt) {
        jPanelCanvasComponentResized(evt);
    }

    private void formWindowActivated(java.awt.event.WindowEvent evt) {
        jPanelCanvasComponentResized(evt);
    }//GEN-LAST:event_jPanelCanvasComponentResized

    private void jPanelColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelColorMouseClicked
        Color color = JColorChooser.showDialog(
                jPanelColor,
                "Изберете цвят",
                jPanelColor.getBackground()
        );
        if (color != null) {
            jPanelColor.setBackground(color);
        }

    }//GEN-LAST:event_jPanelColorMouseClicked

    private void jPanelCanvasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelCanvasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            GLOBALVARS.ctrlPressed = true;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelCanvasKeyPressed

    private void jPanelCanvasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanelCanvasKeyReleased
        GLOBALVARS.ctrlPressed = false; // TODO add your handling code here:
    }//GEN-LAST:event_jPanelCanvasKeyReleased

    private void jToggleButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonSelectActionPerformed
        jPanelCanvas.requestFocusInWindow();
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonSelectActionPerformed

    private void jPanelObjectColorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelObjectColorMousePressed
        jPanelObjectColor.setBackground(JColorChooser.showDialog(
                jPanelObjectColor,
                "Object color‚",
                jPanelObjectColor.getBackground()
        ));

        for (int i = 0; i < GLOBALVARS.figures.size(); i++) {
            if (GLOBALVARS.figures.get(i).isSelected()) {
                GLOBALVARS.figures.get(i).setColor(jPanelObjectColor.getBackground());
            }
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jPanelObjectColorMousePressed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        jPanelCanvasComponentResized(evt);        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowGainedFocus

    private void jPanelCanvasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelCanvasFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelCanvasFocusGained

    private void jSliderRotationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderRotationStateChanged
        for (int i = 0; i < GLOBALVARS.figures.size(); i++) {
            PRIMITIVE primitive = GLOBALVARS.figures.get(i);
            if (primitive.isSelected()) {
                primitive.addToAngleOfRotation(
                        jSliderRotation.getValue() - GLOBALVARS.sliderLastPosition
                );
            }
        }
        GLOBALVARS.sliderLastPosition = jSliderRotation.getValue();
        jLabel2.setText("Завъртане " + jSliderRotation.getValue());
        GLOBALVARS.drawFigures();
    }//GEN-LAST:event_jSliderRotationStateChanged

    private void jSliderRotationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderRotationMousePressed
        if (jToggleButtonSelect.isSelected()) {
            jPanelCanvas.requestFocusInWindow();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jSliderRotationMousePressed

    private void jSliderRotationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSliderRotationMouseReleased
        jPanelCanvas.repaint();
        GLOBALVARS.drawTimer = new Timer();
        GLOBALVARS.drawTimer.schedule(new drawTask(), GLOBALVARS.drawInterval);        // TODO add your handling code here:
    }//GEN-LAST:event_jSliderRotationMouseReleased

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter(
                "Векторни изображения - Trayangle (*.trn)",
                "trn")
        );

        fileChooser.showOpenDialog(this);
        if (fileChooser.getSelectedFile() == null) {
            return;
        }
        String fileName = fileChooser.getSelectedFile().getPath();

        FileInputStream fis = null;
        try {
            fis = new FileInputStream(fileName);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Gui1.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            ObjectInputStream objectInputStream = new ObjectInputStream(fis);
            try {
                GLOBALVARS.figures
                        = (ArrayList<PRIMITIVE>) objectInputStream.readObject();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Gui1.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(Gui1.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter(
                "Векторни изображения - Trayangle (*.trn)",
                "trn")
        );

        fileChooser.showSaveDialog(this);
        if (fileChooser.getSelectedFile() == null) {
            return;
        }
        String fileName = fileChooser.getSelectedFile().getPath();

        if (!fileName.endsWith(".trn")) {
            fileName += ".trn";
        }

        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(fileName);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Gui1.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fos);
            objectOutputStream.writeObject(GLOBALVARS.figures);
            objectOutputStream.close();
        } catch (IOException ex) {
            Logger.getLogger(Gui1.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jToggleButtonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonUpActionPerformed
        for (int i = GLOBALVARS.figures.size() - 2; i >= 0; i--) {
            if (GLOBALVARS.figures.get(i).isSelected()) {
                ComonPrimitive tempFigure
                        = (ComonPrimitive) GLOBALVARS.figures.get(i);
                GLOBALVARS.figures.set(i, GLOBALVARS.figures.get(i + 1));
                GLOBALVARS.figures.set(i + 1, (PRIMITIVE) tempFigure);
            }
        }
        GLOBALVARS.drawFigures();        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonUpActionPerformed

    private void jToggleButtonDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDownActionPerformed
        for (int i = 1; i < GLOBALVARS.figures.size(); i++) {
            if (GLOBALVARS.figures.get(i).isSelected()) {
                ComonPrimitive tempFigure
                        = (ComonPrimitive) GLOBALVARS.figures.get(i);
                GLOBALVARS.figures.set(i, GLOBALVARS.figures.get(i - 1));
                GLOBALVARS.figures.set(i - 1, (PRIMITIVE) tempFigure);
            }
        }
        GLOBALVARS.drawFigures();        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonDownActionPerformed

    private void jToggleButtonUpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButtonUpMouseReleased
        jSliderRotationMousePressed(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonUpMouseReleased

    private void jToggleButtonDownMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButtonDownMouseReleased
        jSliderRotationMousePressed(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonDownMouseReleased

    private void jToggleButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDeleteActionPerformed
        int i = GLOBALVARS.figures.size() - 1;
        while (i >= 0) {
            if (GLOBALVARS.figures.get(i).isSelected()) {
                GLOBALVARS.figures.remove(i);
            }
            i--;
        }
        GLOBALVARS.drawFigures();
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonDeleteActionPerformed

    private void jToggleButtonDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButtonDeleteMouseReleased
        jSliderRotationMousePressed(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButtonDeleteMouseReleased

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (!evt.isControlDown()) {
            GLOBALVARS.deselectAll();
        }
        int selectedIndices[] = jList1.getSelectedIndices();
        for (int i = 0; i < selectedIndices.length; i++) {
            GLOBALVARS.figures.get(selectedIndices[i]).setSelected(true);
            jPanelObjectColor.setBackground(
                    GLOBALVARS.figures.get(selectedIndices[i]).getColor()
            );
        }
        GLOBALVARS.drawFigures();
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelObjectColor;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCanvas;
    private javax.swing.JPanel jPanelColor;
    private javax.swing.JPanel jPanelObjectColor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSliderRotation;
    private javax.swing.JToggleButton jToggleButtonDelete;
    private javax.swing.JToggleButton jToggleButtonDown;
    private javax.swing.JToggleButton jToggleButtonEllips;
    private javax.swing.JToggleButton jToggleButtonMove;
    private javax.swing.JToggleButton jToggleButtonRectan;
    private javax.swing.JToggleButton jToggleButtonSelect;
    private javax.swing.JToggleButton jToggleButtonStar;
    private javax.swing.JToggleButton jToggleButtonUp;
    // End of variables declaration//GEN-END:variables
}
